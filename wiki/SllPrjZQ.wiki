#summary 项目过程改进 ZoomQuiet版 实践参考
#labels SLLS,ZoomQuiet,SllProjFlows

SEE::[SllProjectFlows SLL项目流程]

= 仨儿之建议集 =
== 介绍 ==

作为社区高级顾问，ZoomQuiet（仨儿）为社区发展提供了很多宝贵经验和建议，这里，我们将其汇总，供大家参考、学习

== 总纲 ==
{{{
开放社区,来去自由.不是传销,放心自去!
建议关注,有心再来.学生与否,有何关系?
不要自卑,自重为先;只要有益,都会听取?
既是终言,就此放下.持着执着,放不下矣!
就此放下,自去作事.待有成果,再来印证;-)
}}}


== 集文 ==
_不断添加中……_

*其实就两方面的建议::*
 # _*社区建设方面*_:
  # 如何建立社区?:
   * 原则:**定名->立旨->组队->坚持**
   * [ZqSayCommunityCreat 团队建设:立旨,组队,对外关联]
   * [ZqSayCommunityGrown 社区如何持续发展?进行团队建设?]
  # 如何管理社区资源
   * 1.4社区资源整理 
   * 1.5问题解决的智慧积累
  # 如何有效社区沟通
   * [ZqSayCommunityCommunicate 如何有效社区沟通]
   * 1.4社区资源整理 
   * 1.5问题解决的智慧积累
  # 邮件的规范化使用
   * 5.1什么是邮件列表 
   * 5.2建议和体验
   * 邮件的规范化使用 
  # 维基的规范化使用
   * [ZqSayCommunityKnowledgeMana 如何利用维基进行社区知识管理?]
   * 4.知识管理
   * 4.1社区知识管理问题 
   * 4.2www.sociallearnlab.org/wiki和 Google code wiki 的区别 
   * 4.3优秀习惯 
   * 4.4对xiuli老师写博客的建议
  # 沟通的规范化组织/通告/追踪社区项目/工程/计划
   * [ZqSayCommunityItems 社区项目管理规范化,高效化]
    * [ZqSayEduAnn2018 对于教育宣言项目的建议]
 # _*网络资源使用*_ :
  # 总体思路
  # 如何选择高效工具/服务
   * 字体，文件格式 
   * 版本管理 
   * linux 
  # 如何高效使用工具/服务
   * 针对BBS和"不靠谱"软件 
   * code.google 
   * wiki 
   * 思维分享工具 
   * 邮件管理软件 
  # 自由软件在教育领域
   * _*[ZqSayEduFreeSoftware 教育必须使用自由软件]*_ 
   
`如此而已,几乎都是直接使用即有的国际化社区的经验而已`


== 思绪 ==
XMind saring:[http://share.xmind.net/zoomquiet/sll-proj-zqsuggest/ sll-proj-zqsuggest]

http://xmindshare.s3.amazonaws.com/preview/sll-proj-zqsuggest-gdkjm-1228391386908.jpg
    




*4.3优秀习惯*

收获后，分享，将引发更大规模的收获 .. ;)

～～～～

习惯而已，任何所得，立即记录 ；）
候捷 老师说的，发表是最好的记忆,,,,

嗬嗬嗬,这也是俺一直忽悠的:"发表是最好的记忆"
http://jjhou.csdn.net/article99-8.htm
俺是从台湾候捷老师网站看到的, 然而来源是 胡适!

作为老技术图书专家 候捷老师 的网站:
http://jjhou.csdn.net/
表现出了治学严谨,分类自然,处处为读者着想的学者风范,
这是俺在 SLL 主站看不到的,,,,

～～～～

不用感謝俺，俺分享靠谱经验，有人愿意尝试，俺就可以收获进一步反馈，可以完善经验，俺得感谢大家哪...

～～～～

> 简单可行最好，如果需求工具太多，怕大家应付不过来。
是也乎,SVN 这个版本管理工具是任何对自个儿知识负责的人都应该学习和使用的,
这样才能够进入有版本管理的知识管理境界,

～～～～

是也乎,不过,有个技巧:
先让自个儿爽起来!
对于社区,知识,有具体探索目标的核心成员们,先得找办法,让自个儿在使用/积累/传播社区知识时爽起来,
这才有发言权, 推广的资格,
己所不欲,勿施于人!
所以,所有改进, 先将自个儿改到位了,也就真明白相关细节和好处了,这也才可以达到足以推广的程度,,,

～～～～

另外,分享个收集资料的小习惯:
现场挖掘!
有时候通过各种渠道,找到了自个儿中意的资料后,立即从现场开始挖掘:
这个能写出靠谱文章的人,又有些什么研究领域?
又有什么靠谱的文章?代码?社区?
又有些什么关注的朋友? 朋友们的分享?朋友的朋友的研究领域?
物以类聚,人以群分,好人周围必定是靠谱的人,立即从现场挖掘下去! 将可以抓取到的好文章都先 ScrapBook 下来,
以后慢慢回顾,再分类,再聚合,组织出自个儿的,,,,
http://wiki.woodpecker.org.cn/moin/WeKnow/DemandOrderRep
这也是俺的 weknow 的核心假设,,,

～～～～

录音！录像！照片！文字！
一个都不能少！
外地的成员，就依赖这些异步知识储备来同步认识了


*4.4对xiuli老师写博客的建议*

>> > 我有时候用写日志形式，来不断整理资料，整理思路，但是心里都有想要解决的问题。
因为很多时候不动手写是不知道自个儿是否真正知道的,,,,
因为人的思维是网状的,但是和其它人沟通是线型的,
自个儿头脑里的思想是否可以线型化,其实是标志着自个儿是否真正理解和想透了相关问题,,,
>> >
>> 嗬嗬嗬,这也是俺一直忽悠的:"发表是最好的记忆"
>> http://jjhou.csdn.net/article99-8.htm
>> 俺是从台湾候捷老师网站看到的, 然而来源是 胡适!
>>
>> 作为老技术图书专家 候捷老师 的网站:
>> http://jjhou.csdn.net/
>> 表现出了治学严谨,分类自然,处处为读者着想的学者风范,
>> 这是俺在 SLL 主站看不到的,,,,
>>
>> 对于 xiuli 老师的Blogging 热情是敬佩的,但是追踪 xiuli 老师历史上的各个博客,就非常明显的感觉到,
>> 0. 重复,好文章和思想,反复的在以不同方式的发布
>> 1. 零碎,好思想,总是嘎然而止，不过瘾，，，
>> 2. 混乱,也许是各种Blog 系统的编辑器问题,老师的文章,体现出的是千差万别的排版方式,不象是同一人写的,,,
>> ,,,
>
> ==〉仨儿给我的建议，结合我现在项目管理工具的学习运用，以我个人为例，我想到一个问题，这个问题可能也是老生常谈的问题，就是个人知识管理问题。针对这个问题，以及仨儿对我的建议，我把我自己所想到一些具体想法写在仨儿建议的下面一行，跟大家共同来思考和解决这个问题。
>
相关思考是在N久前的项目中逐渐形成的:
http://wiki.woodpecker.org.cn/moin/WeKnow
刚刚得知,对于知识关系的挖掘和自动分析有自由软件: Weka
 http://baike.baidu.com/view/1380214.htm
其实就俺的体验, 知识流通的分析图谱已经非常直觉的说明了必须进行知识管理和积累,已经分享的原因:
http://wiki.woodpecker.org.cn/moin/SkSig/MindMap

在我们整理和完善过往文章的过程中,其实就是形成自个儿知识平台的过程,
而通过读者们的反馈,就对此平台的测验,,,

> "仨儿：0. 重复,好文章和思想,反复的在不同方式的发布"
>
> ==〉如何解决重复发布问题，如何由一个入口，能够向可能需要发布的不同地方发布？
其实就俺来看,这不是技术问题,而是态度问题,
如果我非常看重自个儿的文字,对自个儿发布的内容非常有责任心,
那么必然意识到:
0. 自个儿写的是有版权的,是要进行标注和声明版权的!
1. 自个儿写的是代表自己的水平和学识的,不是情绪的宣泄,内容是得负责任的!
2. 自个儿写的是消耗了社会劳动时间的,是自个儿的生命一部分,是不允许丢失的!
3. 自个儿写的东西,一但发布,将在网络中流传很长时间,可能引发长久的响应和回复,这也是珍贵的!

这样,在选择/迁移Blog 系统时,必然会选择有合理数据导入导出支持的环境;
而且一但迁移,必然要将文章和回复都完整的迁移走,,,
意识到一切都是不可轻易抛弃之后,
自然会考虑到随时可以快速定位相关文章,每个文章应该有合理的多层次的索引/定位,,,
一切,自然也就条理化,和自个儿的知识平台契合了,,,

> 这里可能还要分几种情况：
>      （1）简短言论，类似Twitter那一类内容；
这不是完整叙述和思想,只是片段,不用关注,当然是最好的消息来源,发现有意义的,就得专门时间挖掘下去,
收集完整的知识段,,,
>      （2）中长文，类似blog上写录的内容；
这些应该是主体关注,短小,内聚,完备的文章,是最容易传播和使用,以及被再次扩充和利用的,,,
而且这些是应该根据反馈不断修订,形成完整,可用的知识点,,,
而且每个关联文章都应该可以方便快速的相互链接起来!
这也是维基化的Blog 写作方式,
Blog 也提供了 RingBack TrackBack Tag Links,,,工具来支持好文章的不断完善,,,
>      （3）长文，比较系统的整理过的文章；
这是最终产物,也是阶段性的总结,不用太关注,积累到一定程度,自然就自动聚合成了,,,

>
>
> "仨儿：1. 零碎,好思想,总是嘎然而止，不过瘾，，，"
>
> ==〉针对这点，我想到可能的原因：
>   （1）有些想法，可能有个发展的过程，不同的阶段做了同一主题的不同记录；这种过程性发展性思考内容，如何记录管理？
持续修订,不要将Blog 看成不可修订,增补的,,,,那不是Blog 的约束,,,
当然也可以尝试 用维基来写Blog , 或是使用 WikiBlog 系统,,,
>
> （2）有些想法需要深入挖掘，一是到类似列表中多人进行研讨；二是需要通过实践项目来深化思想认识。在邮件列表中研讨可以及时整理，例如整理到blog上。通过实践来系统地深化认识的实验，就好像在好看簿中发起的合作项目一样，可能是个工程性问题。如何在工程项目的实践中及时整理提炼知识，这也是一个非常重要的问题。这似乎是一种创造知识的过程。
长期,主动,及时的整理,积累就好!
http://wiki.woodpecker.org.cn/moin/MiscItems
就是这么来的,,,
好记性不如烂笔头!
也是有前提的!
前提就是你的笔记有充分/科学/及时/定期清理的分类和保存!
否则,记了白记,等于没有记,因为使用时,找不到了!

> （３）有些想法，可能需要与相关的资料关联起来，如何及时关联到与之关联的资料？
所以!资料得随手在身边,
在头脑里没有形成文章前,相关的资料就应该分类好,聚集起来,以便在撰写时,可以快速获得,,,

>
> "  仨儿：3. 混乱,也许是各种Blog 系统的编辑器问题,老师的文章,体现出的是千差万别的排版方式,不象是同一人写的,,,"
>
> ==〉 如何形成自己的风格，比较系统化地来表达自己？
>    Blog我原先定位还主要是便捷自己记录管理信息，同时做些分享．
Simple is better!
使用维基风骨来写,关注表达的内容结构和外部链接,其它的都是浮云,
所以,俺的主力Blog:
http://blog.zoomquiet.org/pyblosxom/
是使用 t2t 撰写,SVN 自动发布的,一切都在SNV 中有永久备份的,,,
http://blog.zoomquiet.org/pyblosxom/FLOSS/PyBlosxom/060121-PyblosxomFixLog4
 专门发表,比较固定领域的思考/行动成果
辅助博客:
http://zoomquiet.blogspot.com/
 借助 Blogger.com 的服务,通过 邮件快速发布,记要性质的东西,也是有永久备份和快速迁移的支持,,,

实际上俺原先也想充分使用 Dil.iso.us 的,但是发觉中文网站的暴毙率非常的高，基本上链接可以存活的时间最多2个月，
所以，快速转向了将网页真实的抓取到本地，离线也可以继续查阅的 ScrapBook ,,,
只是ScrapBook的功能实在简单，只有目录，没有TAG没有克隆，没有，，，，老师

当然如果对个人收集的操作需求非常强的话，推荐使用Zotero :: Firefox Add-ons
 https://addons.mozilla.org/en-US/firefox/addon/3504
简单介绍: 十大拒絕使用Zotero的理由 :: ten reasons for not using Zotero
 http://yamje.blogspot.com/2007/10/zotero-ten-reasons-for-not-using-zotero.html
专业分析: Firefox 的杀手级扩展── Zotero - SiGMA Cube
 http://snakehsu.info/sigma_c/2007/10/firefox-zotero.html
有Word 的插件: 在 Microsoft Word 中使用 Zotero - 文管苑
 http://www.endnote.cn/using-zotero-with-microsoft-word-screencast-39.html
扩展的神奇使用: 《純敏達康》 » Zotero + Amazon：個人數位資料庫
 http://www.chunmin.com/archives/46

> 我想是否需要用wiki做个个人主页，如：
> http://code.google.com/p/sociallearnlab/wiki/xiulizhuang　作为一种信息的入口？
>
> 这样是否可行呢？
这完全看你的需求，刚好发现相关的成体系的思考:
 简单做(ZTD)的十个好习惯总结 - 褪墨
 http://www.mifengtd.cn/articles/10-habits-of-ztd.html

俺现在的资料管理基本形成:
+-- 网页收集 ~ ScrapBook
+-- 下载收集 ~ 合理的固定目录
+-- 每日记要 ~ Zim 桌面维基
 http://linuxtoy.org/archives/zim.html
+-- 被动接收 ~ Twitter/列表/Blog 推送
\-- 主动发布 ~ Blog+Wiki

这样一个相互关联的分层管理体系,,,

Just do it!
使用Nike 的广告语!
你不坚持去作,去改进,永远是乱的!
任何作家给你的写作经验,永远只有: 写!
在社会化背景中的学习分享发布,经验或是方案永远:
写!然后修订!
在社会化关注和反馈中,不断的修订,增补,完善你心中固定的目标!

其实,只是在和大家,有相同述求,追求,思考的大家相互沟通中,俺的这些观念也才能成型,分享成文章的,,,,

如何把信息与人建立有机联系？无论是信息找人还是人找信息？
让信息出现在应该出现的地方!
任何文章,都可以就地获得创建人/主笔人的信息;
任何文章,都有相关知识领域/点/讨论的链接;
任何人的维基页面,都有他创建文章的列表,以及他有兴趣的,在学习的文章列表;
,,,,


== 5.邮件的规范化使用 ==


*5.1什么是邮件列表*

http://wiki.woodpecker.org.cn/moin/HowtoMailist

其中有个幻灯资料: 邮件列表的规范和礼节
http://www.woodpecker.org.cn:9081/classes/050730-CPUG/usMaillist/


核心成员列表一直有订阅要求的!
但是发现:

0. 管理员有14名之多, 大家都知道怎么操作和判定订阅行为是否合理?

1. 订阅的问题 有4个,要求是全体管理员同意后才加入,,,什么时候这么执行过了?

俺已经反复吼过了,社区已经有一定资源整理了,但是一直没有很好的进行引导和合理运用,,,
现在是多个列表没有差异,同一邮件被任何转发给所有列表,线索混乱,讨论反复,
常常一个小问题,讨论几周,到最后大家都忘记想要确认什么了,,,


*5.2建议和体验:*

0. 工作邮件规范化建议:
 http://wiki.woodpecker.org.cn/moin/HowtoMailist
 
请参考，为了兼顾所有人的邮件客户端，以及推动大家不断的优化邮件管理习惯:

0-1 将所有链接单独一行

0-2 使用合适的标签

0-3 每封邮件都说明清楚 4W1H

历史推荐:

强烈建议小的讨论到IRC里或Code Issues进行 - SocialLearnLab-Members:"教育大发现"核心成员列表 | Google 网上论坛
http://tinyurl.com/579g8h

关于"教育大发现"社区功能架构的一点建议 - SocialLearnLab-Members:"教育大发现"核心成员列表 | Google 网上论坛
http://tinyurl.com/5wzbza

作为社区沟通邮箱，请不要设定自动回复，
自动回复没有任何意义，而且成为他人邮箱的噪音,,,

～～～～

> 点击

> http://groups.google.com/group/sociallearnlab-members/web/%E7%A4%BE%E5%8C%BA%E7%BD%91%E9%A1%B5%E5%8F%8A%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1%E9%97%AE%E9%A2%98%E5%8F%8A%E5%BB%BA%E8%AE%AE?hl=zh-CN

> - 如果链接不起作用，请复制该链接并将其粘贴到您浏览器的地址栏中。


建议：

0. 不要使用中文URL

1. 长URL 使用工具进行精简使用: http://tinyurl.com/5tw3j6

2. 需要大家都修订的,使用 维基 最好 ;)

～～～～

建议哪，列表邮件前缀，简化一下，否则，在未读列表中，非常占空间，根本看不到邮件本身的标题了...

sociallearnlab-member

~= [SLL-mem]

作为正式工程，都应该有Unix 缩写名的，
比如说 OpenBookProject 就一直使用 OBP 作为缩写，
https://groups.google.com/group/openbookproject?lnk=li

http://code.google.com/p/openbookproject/

这也是团队的内部约定和专用词，也是文化建议之一....

～～～～

good! 开始推动了..
不过，列表的设置 没有按照习惯方式进行哪

前缀配置成 [SLL-mem:%d]

这样就可以看到列表邮件的增长了...
比如说 [SLL-mem:1024] 就是指总第1024 封邮件...


= 网络资源使用: =

== 总体思路 ==

嘿嘿嘿,从俺 M$ 时代"我自豪,我用D版!" 的软件大品尝,
到后来的唯绿色软件,
到现在的唯自由软件,整个软件/技术学习体验看,
就是:"Use it! need not learning!"
用之! 不学!

只用应该用的,不学现在不用的....

绝对不为学习而学习,而是使用现成的工具来创造...


～～～～

这也是有技巧的哪,
任何事儿,得通过恰当的渠道令所有人舒服的获得;
类似列表这种异步信息沟通,如果不是所有人一直积累浏览邮件,将形成各种"惊奇",,,特别是列表的使用礼节没有都习惯时;
IRC 这种实时沟通渠道,对大家的时间要求非常高,而且到点如果手头有事儿的,也不可能很好的接受讨论信息,,,

所以,就俺的体验,一定要将各种渠道合理配合使用:

0. 维基作为唯一的正式决议通告方式,每个方面的决议使用独立的页面进行收集,整理,形成全球唯一的URL 标识的信息节点;
 (以免决议形成不同版本,形成噪音)

1. 列表作为有证据记载的讨论中心,大家可以在不同的时间分别相互理解和发表意见,最终形成决议,正式发布到维基中

2. IRC/MSN/好看/主页/日历,,,,,各种灵活的信息发布渠道,作为提醒渠道,将决议维基URL 不断的通告给所有人

这样,社区事务的正式发布/变更讨论/通告传播 就有机结合起来了,,,

～～～～

案例：

这个从一开始就进行了分享,这个 OBP 方程已经存在N久了:

维基: [http://wiki.woodpecker.org.cn/moin/OBP]

工程: [http://code.google.com/p/openbookproject/]

项目: [http://obp.everydo.com/] 用户:guest 口令:guest

列表: [https://groups.google.com/group/openbookproject]

经验: [http://code.google.com/p/openbookproject/wiki/HowToBuildBookOnline]

IRC:[http://code.google.com/p/openbookproject/wiki/UsageIrc]

 现在主要使用 zeuux 自个儿的IRC服务: [http://code.google.com/p/openbookproject/wiki/ZeuuxIrc]

 #zeuux-press

没有Blog;没有BBS;没有QQ群...
但是保证了一切沟通都有记录可以追查,所有修订都有版本可以追踪...


== 1.字体，文件格式 ==

现在看来:

0. 背景太大!打开有等候,建议使用gif 小图片作背景,而且背景不应该影响文字的阅读!

 建议使用 社区的 甲骨文 人 作背景就好

1. 概念图中千万不要出现大量的相同文字!

 如果 包括 是个总体动词的话,就应该复用,,,

2. 字体问题:

   字体建议
       * 文字使用圆体 比如说:Vera Sans YuanTi Mono
       * 数字字母使用: Monaco
       * 保证数字和字母，以及中文标点和代码标点有巨大的差异
             o  特别是 0 vs Oo; I vs l

曾经有人进行了多方对比:
[http://www.2maomao.com/blog/best-programmer-fonts/]

中文的字体对比:
[http://www.osxcn.com/ubuntu/heiti-contrast.html]

作为教育社区,真的应该从最小处作起,使用靠谱的自由/明晰字体 宣扬版权意识,以便未来我们提纯出来的社会化教育方案也进行法律保护下的正确推广,
不能让小人们任意窜改大家的探索成果说是自个儿的然后毒害学生们,,,,

～～～～

建议，不要使用 HTML 格式邮件！
就明确的将录音文件下载URL 单独一行给出就好，
而且应该给出体积，时长等等基础信息，以便下载时参考，，，
现在俺这儿下载时，就是不知道一共有多大，应该等待多少时间,,,
而且，最好不要给 wav 的原始文件，也不要使用 mp3 这种版权格式的压缩，建议使用 .ogg 自由音乐格式,,,

== 2.版本管理： ==

对于任何協作团队来讲，核心要命的支持管理就是"版本管理"

> >简单可行最好，如果需求工具太多，怕大家应付不过来。

是也乎,SVN 这个版本管理工具是任何对自个儿知识负责的人都应该学习和使用的,
这样才能够进入有版本管理的知识管理境界,

SVN + Trac 以及知识管理～一次培训的资料:
[http://www.zoomquiet.org/share/s5/0707-SVNnTrac/]

SVN, 可以方便统一的作到:

0. 将所有成员的工作，通过中央仓库的形式进行同步和安全的分发

1. 将成员所有交付成果，进行了版本管理，可以安全回溯到历史任何一个时间点

2. 对文本的冲突，进行了自动化的提醒，可以精确的汇报出差异，类似:
[http://wiki.woodpecker.org.cn/moin/TrustedGroup?action=diff&rev2=146&rev1=145]
或是: [http://tinyurl.com/5axbxs]

原始链接:
[http://trac.edgewall.org/changeset?new=7440%40trunk%2Ftrac%2Fwiki%2Fdefault-pages%2FTracModPython&old=7422%40trunk%2Ftrac%2Fwiki%2Fdefault-pages%2FTracModPython]

3. 可以通过分支的管理，对工程发行版本，进行并行维护...

总之对于团队工作的项目管理:
需求／变更／版本／发布 管理是有机结合在一起的，统称配置管理，
没有 CM ~ configure manage 配置管理，工程的进度，就无从控制，

～～～～

SVN 版本仓库,可以想象成一个中央存储,智能化的将所有人的成果合理合法的保存下来,所有人的工作,以SVN仓库为准,进行版本更替;
SVN 版本管理是来自CVS 等等更早的系统策略的,
比较经典的 FreeBSD 版本发布策略:
[http://www.freebsd.org/doc/en_US.ISO8859-1/articles/releng/release-proc.html]

所以,code.google 提供的 SVN 目录内含的版本策略是:
{{{
/ 仓库根
 +-- wiki 工程维基
 +-- tag  标签版本
 +-- trunk 主干分支
 +-- branches 版本分支
}}}
其中 tagu和branches 和从CVS 时代继承下来的习惯,但是在SVN中,俺建议:

[http://wiki.woodpecker.org.cn/moin/OssSvnRule]
{{{
/ 仓库根
 +-- wiki     工程维基
 +-- tasks    任务分支收集
 +-- tangle   试验代码收集
 +-- trunk    主干分支
 +-- branches 发布版本分支收集
}}}
这样SVN 的目录使用就根据不同的代码,或是文本性质进行了明确的分类:
{{{
+-- tasks    收集各种和主工程无关的辅助,支持性质任务代码
+-- tangle   对应开辟各种成员目录,收集平时的积累,成熟后就可以合并到 trunk 主干代码中
+-- trunk    主干分支, 所有最新的成果组织在期中
+-- branches 发布版本分支收集, 收集阶段性成果,并进行针对版本的追踪维护,比如说:
 +-- Ss4student_0.1_tadpole   v0.1 蝌蚪 版 图书稿和样例
 +-- Ss4student_0.2_frog      v0.2 青蛙 版 图书稿和样例
}}}
== 3.针对BBS和“不靠谱”软件 ==

社区研究之BBS的死亡鉴定
http://blog.donews.com/yokanta/archive/2006/06/05/902554.aspx

类似BBS 的重注意力，不重内容的沟通平台对于教育的推进和知识的积累只能起到破坏性的反作用！
对于实时交流，俺建议使用 IRC 聊天室，
配合插件可以自动记录到维基中...

任何改革，最困难的改变固有习惯，
与其在吸引来后，才一点点改变，
不如从开始就不要使用对知识管理无意义的BBS 等形式....

是也乎,这是个最最最基础FAQ:
凡是靠谱软件,一切都给予用户权力来配置的!
只要是有地方不让用户来自行配置的,都是没有自信的,有小秘密的 unkaopulity 软件!
好软件,就是最吻合自个儿习惯的软件!


== 5.code.google == 

*简介：*

配合有 SVN 版本管理后台的，
自动渲染发布环境，
通过WIKI 进行索引，通过SVN 进行协同发布，
通过列表进行沟通，
通过Issue 进行问题追踪...

*配置：*

[http://code.google.com/p/sociallearnlab/]
没有在 wiki 目录中有反应,所以,只能人工编辑,
俺重构了一下,
建议,这个工程首页,应该作为一个根索引页,作为所有其它页面的总入口,

另外,俺建议,在组织所有维基页面时,有个基本准则,就是任何一个维基页面从首页进行点击访问时,不应该超过3次点击!

接下来，应该将 code.google 和列表联动，
在工程的 admin. 标签中 Activity Notifications 一节有描述:
codesite-noreply@google.com
是工程的自动通告邮箱，将其加入到列表订阅中，配置成只 web 查阅，但是允许发送邮件，
就可以在 code.google 中设定，
将所有SVN 检入活动或是Issue 的提交情况，自动汇报给列表了....

*Issue追踪系统*

可惜，code.google 作为一个完备的项目管理环境，大家用的并不完全，Issue 是一个非常简洁好用的追踪系统，
可以进行任务分配/问题追踪/缺陷记录/需求设计,,,, 配合维基 更加可以完善的记录项目的进度,,,

> 我想肯定有一部分人，跟我一样，没有弄清楚Googelcode中Issue如何用。

感谢 xiuli 勇敢品尝螃蠏！

不过，从很久之前，以下两个专项说明页面，就是在工程首页的了:
Issue 提案流程概述
[http://code.google.com/p/sociallearnlab/wiki/IssueFlow]

 Issue 提案标签详解
 [http://code.google.com/p/sociallearnlab/wiki/IssueTags]

请大家查阅后，对比 xiuli 老师的操作，自个儿也尝试一下，
开始将大任务分解成可追踪的小任务，开始追踪/流通/分配吧,,,,

发现 Issue 的个性, 不是维基语法,对 URL 不进行自动解析,
但是对 Issue 相关的行动都有对应的自动解析了, 从我们创建 Issue 开始到完成任务:

0. 创建提案后, [http://code.google.com/p/sociallearnlab/issues/detail?id=5]
最后的 id= 的数字就是全球唯一的任务编号,,

1. 在Issue 中 任何地方使用 " Issue 5 " 这种格式的字串,就可以自动解析成提案的链接!

2. 在我们为此任务进行SVN 检入时的注释中就可以使用! 这样在 SVN 的Changeset 中,就可以自动解析出任务的链接:

 例如: [http://code.google.com/p/sociallearnlab/source/detail?r=525]

 Changeset 列表在:[http://code.google.com/p/sociallearnlab/source/list]

3. 最后我们回到 Issue 页面,可以使用 " r525 " 格式的字串来说明SVN的操作, 一样这将自动解析成链接,指向

[http://code.google.com/p/sociallearnlab/source/detail?r=525]

由此,一个具体任务的 创建/指派/完成/关闭 的整体过程的所有信息形成了完整的封闭循环!
{{{
Issue->认领->SVN检入解决
 ^            |
 |            |
 +--注释说明---+
}}}
*其他*

其实 code.google 提供的维基,就已经是非常吻合最小原则的有自动化版本协同的发布系统了;
因为 code.google 的维基和SVN 是联动的
[http://openbookproject.googlecode.com/svn/wiki/]
通过 SVN 对 维基的中的文本进行修订就可以直接获得 web 方面的修订!

e.g

[http://code.google.com/p/openbookproject/source/detail?r=1382]
的SVN 提交,就自然的修订了:
http://code.google.com/p/openbookproject/wiki/ZoomQuiet

而且已经有一些项目直接使用 这个简单维基进行了图书的撰写:
[http://code.google.com/p/zhpy/wiki/ByteOfZhpy]

使用结构化文档的好处就在于内容和形式分离,可以通过工具,自动化的进行多种形式的发布!
[http://wiki.woodpecker.org.cn/moin/AllAboutText]

有歌曰:
{{{
文本文件好
工具遍地跑
程序两三行
全部改好了
}}}
文本文件好 - Blog on 27th Floor
[http://blog.cathayan.org/item/920]

～～～～

咔咔咔,这也是 code.google 在 Guido 加入后给出的完美解决方案:
{{{
[https://sociallearnlab.googlecode.com/svn/wiki/]
 + <-> [http://code.google.com/p/sociallearnlab/w/list]
 + <-> 用户本地 svn 工作复本
}}}
关系如上,对于code.google的维基 和 通过SVN 检入 wiki 目录, 是完全一样的,没有任何差别,

SVN 仓库, 对这两种表现都是个版本仓库,

不过,一个是在线编辑,一个是离线编辑;

在线的必须有网络,而且只能使用网页的输入框,

离线的,可以在任何地方放心的进行编辑,而且可以使用自个儿喜欢的编辑器进行!

再次建议!!!

在所有图书维基页面发布之前,先在 trunk 中创建组织好文档,维基发布出来后,就可以进行公众评阅了!

俺建议文件命名规范:
{{{
ZhGshAccountHowto.wiki
|  |  |           +-- wiki 后缀的纯 utf-8 文本文件,可以直接复制到 wiki 目录自动发布的
|  |  +-- 章节E文名,使用WikiName 格式
|  +-- 图书工程缩写
+-- 语言地域缩写 Zh|En|Tw|Fr ...
}}}
== 6.wiki ==

wiki，所想即所得

> 我很赞成仨儿的说法，在Wiki上写书，很不方便，以前我也有过这样的想法，就是在Ubuntu Wiki里，很多朋友告诉我，用Wiki来写书，很不现实。

这点,俺无法认同:
[http://wiki.woodpecker.org.cn/moin/WyTiWyG]
其实大家习惯的在 WYSIWYG 的 word 中写作时,很有部分时间根本不是在撰写内容,而是在不断的变换各种角色来使用软件,
而不是利用软件来協助写作!

维基是 WYTIWYG ~ 所想即所得,维基仅仅要求很少的文本约定来标定特殊内容,以及文章的结构,
其它没有任何强制性的要求,
我们可以真正的关注文章本身,而不是文章最终的输出樣子!!!

在网络中已经有大量的各种图书,是直接通过维基进行协同完成了的,不应该用旧的编辑习惯来异化维基体验...


使用 Office 软件,扼杀了一切良好的協同配合,大家变成了熟练格式工人,而不是思考者!

LeTaX/SGML/HTML/XML/XHTML/DocBook ....

都是标签语言,是反人性的,中断阅读体验的语言,
相比结构化文本虽然对格式控制更加丰富,但是真的很难学习和习惯的...
{{{
文本格式可读性:Office文档(不可读) > 标签文本 > 结构化文本
学习容易程度性:Office文档(不可学习) > 标签文本 > 结构化文本
输出表现丰富性:标签文本 > Office文档 > 结构化文本
跨平台兼容性:  结构化文本> 标签文本 > Office文档
}}}
== 7.思维分享工具 ==

俺N懒的!而且 DreamWare 是要钱的!

俺是使用 FreeMind 内置的输出成 HTML 的功能,自动输出的,不用任何多余编辑!

不过,俺建议使用 CampTools
[http://cmap.ihmc.us/]

效果更加好,而且,可以进行分布的思维图分享!是真正的有SNS 功能的思维分享工具!

～～～～

注意到 xiuli 开始大量使用 xMind 来组织思绪了!
同时 xMind 利用 S3 进行了云空间分享;
而且专业版本是支持多图谱间的关联,包含,连接的!


所以,倡议:

0. 大家在相关自我介绍或是内部通讯录中公布自个儿的 xMind 帐号,以便相互关联

1. 社区订购 xMind 专业版本的使用吧,分享注册码,开展基于网络的思维联接?!
 - 这方面本来 Camptools 也是支持的,但是没有 xMind 这么方便,,,

～～～～

老师非常积极非常认真的在寻求解决,不过,俺从中看到的:

0. 没有使用列表沟通,试图一对一邮件沟通,以期得到重视~ 这不是开放的作法,其实清风,或是其它 SLL-mem 成员,就有可能就有相关经验呢?

1. 使用中文文件名进行发布,这是一切 web 应用最头痛的作法

2. 从附件看来,吴老师,对于 网页的理想比较单纯,没有看过HTML 的源代码吧,所以,无法理解俺的提示:
 "作到和本地发布时,相同的文件引用"

3. 不提供 camptools 的设计原件,也没有检入到 code.google 工程的tasks 相应目录中,那么俺就无法确认检出方式是否有问题?

比如说,俺的示例发布:
[http://www.zoomquiet.org/share/mm/kcpycamp/]
就是成功的,涉及的文件
{{{
./
|-- CmapToolsTrademark.gif
|-- index.html
|-- index.jpg
`-- project.idx
}}}
0 directories, 4 files

== 8.邮件管理软件 ==

俺从 Foxmail->the bat! 到现在的 雷鸟,邮件管理量是越来越大的,
现在看来只有 Thunderbird 是跨平台最合用的桌面管理软件了,
Gmail 必竟是外国服务,可能被封,想长治久安的管理自个儿的邮件,开始进化吧,
管理邮件平台!思想!

～～～～

>>现在知道仨为什么可以每天处理500+邮件了，靠谱的邮件端gmai+快捷键＋所想即所得＋…… 

嗯嗯嗯,还得加上:

0. 明确的知道自个儿想通过邮件达到什么目的,邮件不是网页,不是随便回复的,,,

1. 有长期坚持和使用的一套固定的 标签,这样才可以快速分类和重新搜索出来

2. 及时使用和体验 Gmail 的新功能,所有新功能都是重度邮件用户反馈给 Gmail 获得的,,,
  所以,俺配置的是 E文/USA 地区,这样可以及时获得新功能的自动升级,
[http://xbeta.info/gmail-labs.htm]
类似这种实验功能也可以快速体验,嵌入到管理行为中,进行再加速,

比如说:

使用了 超级星标（Superstar） 功能后,
俺在任何地方,只要使用
s ~ 标注星号, 就可以追加自定的不同含义的星号
连续不断的 按 s
将在俺如附件定为的 星/继续/感叹/对号/问号/空 的序列循环标记,,,

Happy Hacking,

Happy Mailing,,,










